{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'; // import {\n// orderCreateReducer,\n// orderDetailsReducer,\n// orderPayReducer,\n// orderDeliverReducer,\n// orderListMyReducer,\n// orderListReducer,\n// } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer // orderCreate: orderCreateReducer,\n  // orderDetails: orderDetailsReducer,\n  // orderPay: orderPayReducer,\n  // orderDeliver: orderDeliverReducer,\n  // orderListMy: orderListMyReducer,\n  // orderList: orderListReducer,\n\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/mereilim/Desktop/Project/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAI,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACAC,kBADA,EAEAC,qBAFA,EAGAC,oBAHA,EAIAC,oBAJA,EAKAC,oBALA,EAMAC,0BANA,EAOAC,sBAPA,QAQO,4BARP;AASA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACAC,gBADA,EAEAC,mBAFA,EAGAC,kBAHA,EAIAC,wBAJA,EAKAC,eALA,EAMAC,iBANA,EAOAC,iBAPA,QAQO,yBARP,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGnB,eAAe,CAAC;AAChCoB,EAAAA,WAAW,EAAEhB,kBADmB;AAEhCiB,EAAAA,cAAc,EAAEhB,qBAFgB;AAGhCiB,EAAAA,aAAa,EAAEhB,oBAHiB;AAIhCiB,EAAAA,aAAa,EAAEhB,oBAJiB;AAKhCiB,EAAAA,aAAa,EAAEhB,oBALiB;AAMhCiB,EAAAA,mBAAmB,EAAEhB,0BANW;AAOhCiB,EAAAA,eAAe,EAAEhB,sBAPe;AAQhCiB,EAAAA,IAAI,EAAEhB,WAR0B;AAShCiB,EAAAA,SAAS,EAAEhB,gBATqB;AAUhCiB,EAAAA,YAAY,EAAEhB,mBAVkB;AAWhCiB,EAAAA,WAAW,EAAEhB,kBAXmB;AAYhCiB,EAAAA,iBAAiB,EAAEhB,wBAZa;AAahCiB,EAAAA,QAAQ,EAAEhB,eAbsB;AAchCiB,EAAAA,UAAU,EAAEhB,iBAdoB;AAehCiB,EAAAA,UAAU,EAAEhB,iBAfoB,CAgBhC;AACA;AACA;AACA;AACA;AACA;;AArBgC,CAAD,CAA/B;AAwBA,MAAMiB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD2B,GAE3B,EAFF;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFF;AAIA,MAAMK,YAAY,GAAG;AACrBf,EAAAA,IAAI,EAAE;AACNgB,IAAAA,SAAS,EAAER,oBADL;AAENS,IAAAA,eAAe,EAAEH;AAFX,GADe;AAKrBb,EAAAA,SAAS,EAAE;AAAEiB,IAAAA,QAAQ,EAAEL;AAAZ;AALU,CAArB;AAQA,MAAMM,UAAU,GAAG,CAAC5C,KAAD,CAAnB;AAEA,MAAM6C,KAAK,GAAGhD,WAAW,CACzBoB,OADyB,EAEzBuB,YAFyB,EAGzBvC,mBAAmB,CAACF,eAAe,CAAC,GAAG6C,UAAJ,CAAhB,CAHM,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["    import { createStore, combineReducers, applyMiddleware } from 'redux'\n    import thunk from 'redux-thunk'\n    import { composeWithDevTools } from 'redux-devtools-extension'\n    import {\n    productListReducer,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productReviewCreateReducer,\n    productTopRatedReducer,\n    } from './reducers/productReducers'\n    import { cartReducer } from './reducers/cartReducers'\n    import {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n    } from './reducers/userReducers'\n    // import {\n    // orderCreateReducer,\n    // orderDetailsReducer,\n    // orderPayReducer,\n    // orderDeliverReducer,\n    // orderListMyReducer,\n    // orderListReducer,\n    // } from './reducers/orderReducers'\n\n    const reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    // orderCreate: orderCreateReducer,\n    // orderDetails: orderDetailsReducer,\n    // orderPay: orderPayReducer,\n    // orderDeliver: orderDeliverReducer,\n    // orderListMy: orderListMyReducer,\n    // orderList: orderListReducer,\n    })\n\n    const cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : []\n\n    const userInfoFromStorage = localStorage.getItem('userInfo')\n    ? JSON.parse(localStorage.getItem('userInfo'))\n    : null\n\n    const shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\n    : {}\n\n    const initialState = {\n    cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n    }\n\n    const middleware = [thunk]\n\n    const store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n    )\n\n    export default store"]},"metadata":{},"sourceType":"module"}