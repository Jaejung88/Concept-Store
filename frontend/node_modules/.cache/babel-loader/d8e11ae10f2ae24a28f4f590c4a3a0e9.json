{"ast":null,"code":"import axios from 'axios';\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_FAIL, USER_LIST_SUCCESS, USER_LIST_REQUEST, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST } from '../constants/userConstants'; // import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  }); // dispatch({ type: ORDER_LIST_MY_RESET })\n\n  dispatch({\n    type: USER_LIST_RESET\n  });\n  document.location.href = '/login';\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mereilim/Desktop/Project/frontend/src/actions/userActions.js"],"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DETAILS_RESET","USER_LIST_FAIL","USER_LIST_SUCCESS","USER_LIST_REQUEST","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_REQUEST","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","document","location","href","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id"],"mappings":"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","sourcesContent":["\n    import axios from 'axios'\n    import {\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_DETAILS_RESET,\n    USER_LIST_FAIL,\n    USER_LIST_SUCCESS,\n    USER_LIST_REQUEST,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_REQUEST,\n    } from '../constants/userConstants'\n    // import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n    export const login = (email, password) => async (dispatch) => {\n    try {\n    dispatch({\n        type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n        headers: {\n        'Content-Type': 'application/json',\n        },\n    }\n\n    const { data } = await axios.post(\n        '/api/users/login',\n        { email, password },\n        config\n    )\n\n    dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n    dispatch({\n        type: USER_LOGIN_FAIL,\n        payload:\n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n    })\n    }\n    }\n\n    export const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('cartItems')\n    localStorage.removeItem('shippingAddress')\n    localStorage.removeItem('paymentMethod')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    // dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n    document.location.href = '/login'\n    }\n\n    export const register = (name, email, password) => async (dispatch) => {\n    try {\n    dispatch({\n        type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n        headers: {\n        'Content-Type': 'application/json',\n        },\n    }\n\n    const { data } = await axios.post(\n        '/api/users',\n        { name, email, password },\n        config\n    )\n\n    dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: data,\n    })\n\n    dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n    dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n    })\n    }\n    }\n\n    export const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n    dispatch({\n        type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n        userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n        headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n        },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n        type: USER_DETAILS_SUCCESS,\n        payload: data,\n    })\n    } catch (error) {\n    const message =\n        error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n    }\n    dispatch({\n        type: USER_DETAILS_FAIL,\n        payload: message,\n    })\n    }\n    }\n\n    export const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n    dispatch({\n        type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n        userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n        headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n        },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n        type: USER_UPDATE_PROFILE_SUCCESS,\n        payload: data,\n    })\n    dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n    const message =\n        error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n    }\n    dispatch({\n        type: USER_UPDATE_PROFILE_FAIL,\n        payload: message,\n    })\n    }\n    }\n\n    export const listUsers = () => async (dispatch, getState) => {\n    try {\n    dispatch({\n        type: USER_LIST_REQUEST,\n    })\n\n    const {\n        userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n        headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n        },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n        type: USER_LIST_SUCCESS,\n        payload: data,\n    })\n    } catch (error) {\n    const message =\n        error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n    }\n    dispatch({\n        type: USER_LIST_FAIL,\n        payload: message,\n    })\n    }\n    }\n\n    export const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n    dispatch({\n        type: USER_DELETE_REQUEST,\n    })\n\n    const {\n        userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n        headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n        },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n    } catch (error) {\n    const message =\n        error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n    }\n    dispatch({\n        type: USER_DELETE_FAIL,\n        payload: message,\n    })\n    }\n    }\n\n    export const updateUser = (user) => async (dispatch, getState) => {\n    try {\n    dispatch({\n        type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n        userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n        headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n        },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n    } catch (error) {\n    const message =\n        error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n    }\n    dispatch({\n        type: USER_UPDATE_FAIL,\n        payload: message,\n    })\n    }\n    }"]},"metadata":{},"sourceType":"module"}