{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants';\nimport { logout } from './userActions';\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/products`, {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, config);\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listTopProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_TOP_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/top`);\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mereilim/Desktop/Project/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","logout","listProducts","keyword","pageNumber","dispatch","type","data","get","payload","error","response","message","listProductDetails","id","deleteProduct","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createProduct","post","updateProduct","product","put","_id","createProductReview","productId","review","listTopProducts"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n    dispatch\n    ) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n        )\n\n        dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data,\n        })\n    } catch (error) {\n        dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload:\n            error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n    }\n\n    export const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n        type: PRODUCT_DETAILS_SUCCESS,\n        payload: data,\n        })\n    } catch (error) {\n        dispatch({\n        type: PRODUCT_DETAILS_FAIL,\n        payload:\n            error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n    }\n\n    export const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n        type: PRODUCT_DELETE_REQUEST,\n        })\n\n        const {\n        userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n        headers: {\n            Authorization: `Bearer ${userInfo.token}`,\n        },\n        }\n\n        await axios.delete(`/api/products/${id}`, config)\n\n        dispatch({\n        type: PRODUCT_DELETE_SUCCESS,\n        })\n    } catch (error) {\n        const message =\n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n        }\n        dispatch({\n        type: PRODUCT_DELETE_FAIL,\n        payload: message,\n        })\n    }\n    }\n\n    export const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n        type: PRODUCT_CREATE_REQUEST,\n        })\n\n        const {\n        userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n        headers: {\n            Authorization: `Bearer ${userInfo.token}`,\n        },\n        }\n\n        const { data } = await axios.post(`/api/products`, {}, config)\n\n        dispatch({\n        type: PRODUCT_CREATE_SUCCESS,\n        payload: data,\n        })\n    } catch (error) {\n        const message =\n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n        }\n        dispatch({\n        type: PRODUCT_CREATE_FAIL,\n        payload: message,\n        })\n    }\n    }\n\n    export const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n        type: PRODUCT_UPDATE_REQUEST,\n        })\n\n        const {\n        userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${userInfo.token}`,\n        },\n        }\n\n        const { data } = await axios.put(\n        `/api/products/${product._id}`,\n        product,\n        config\n        )\n\n        dispatch({\n        type: PRODUCT_UPDATE_SUCCESS,\n        payload: data,\n        })\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n    } catch (error) {\n        const message =\n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n        }\n        dispatch({\n        type: PRODUCT_UPDATE_FAIL,\n        payload: message,\n        })\n    }\n    }\n\n    export const createProductReview = (productId, review) => async (\n    dispatch,\n    getState\n    ) => {\n    try {\n        dispatch({\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\n        })\n\n        const {\n        userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${userInfo.token}`,\n        },\n        }\n\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n        dispatch({\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\n        })\n    } catch (error) {\n        const message =\n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n        }\n        dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload: message,\n        })\n    }\n    }\n\n    export const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top`)\n\n        dispatch({\n        type: PRODUCT_TOP_SUCCESS,\n        payload: data,\n        })\n    } catch (error) {\n        dispatch({\n        type: PRODUCT_TOP_FAIL,\n        payload:\n            error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n    }"]},"metadata":{},"sourceType":"module"}