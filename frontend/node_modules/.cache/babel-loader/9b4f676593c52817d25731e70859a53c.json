{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // import {\n// productListReducer,\n// productDetailsReducer,\n// productDeleteReducer,\n// productCreateReducer,\n// productUpdateReducer,\n// productReviewCreateReducer,\n// productTopRatedReducer,\n// } from './reducers/productReducers'\n\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer, orderListReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/mereilim/Desktop/Project/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","orderListMyReducer","orderListReducer","reducer","productList","productListReducer","productDetails","productDetailsReducer","productDelete","productDeleteReducer","productCreate","productCreateReducer","productUpdate","productUpdateReducer","productReviewCreate","productReviewCreateReducer","productTopRated","productTopRatedReducer","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAI,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACAC,gBADA,EAEAC,mBAFA,EAGAC,kBAHA,EAIAC,wBAJA,EAKAC,eALA,EAMAC,iBANA,EAOAC,iBAPA,QAQO,yBARP;AASA,SACAC,kBADA,EAEAC,mBAFA,EAGAC,eAHA,EAIAC,mBAJA,EAKAC,kBALA,EAMAC,gBANA,QAOO,0BAPP;AASA,MAAMC,OAAO,GAAGlB,eAAe,CAAC;AAChCmB,EAAAA,WAAW,EAAEC,kBADmB;AAEhCC,EAAAA,cAAc,EAAEC,qBAFgB;AAGhCC,EAAAA,aAAa,EAAEC,oBAHiB;AAIhCC,EAAAA,aAAa,EAAEC,oBAJiB;AAKhCC,EAAAA,aAAa,EAAEC,oBALiB;AAMhCC,EAAAA,mBAAmB,EAAEC,0BANW;AAOhCC,EAAAA,eAAe,EAAEC,sBAPe;AAQhCC,EAAAA,IAAI,EAAE7B,WAR0B;AAShC8B,EAAAA,SAAS,EAAE7B,gBATqB;AAUhC8B,EAAAA,YAAY,EAAE7B,mBAVkB;AAWhC8B,EAAAA,WAAW,EAAE7B,kBAXmB;AAYhC8B,EAAAA,iBAAiB,EAAE7B,wBAZa;AAahC8B,EAAAA,QAAQ,EAAE7B,eAbsB;AAchC8B,EAAAA,UAAU,EAAE7B,iBAdoB;AAehC8B,EAAAA,UAAU,EAAE7B,iBAfoB;AAgBhC8B,EAAAA,WAAW,EAAE7B,kBAhBmB;AAiBhC8B,EAAAA,YAAY,EAAE7B,mBAjBkB;AAkBhC8B,EAAAA,QAAQ,EAAE7B,eAlBsB;AAmBhC8B,EAAAA,YAAY,EAAE7B,mBAnBkB;AAoBhC8B,EAAAA,WAAW,EAAE7B,kBApBmB;AAqBhC8B,EAAAA,SAAS,EAAE7B;AArBqB,CAAD,CAA/B;AAwBA,MAAM8B,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD2B,GAE3B,EAFF;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFF;AAIA,MAAMK,YAAY,GAAG;AACrBrB,EAAAA,IAAI,EAAE;AACNsB,IAAAA,SAAS,EAAER,oBADL;AAENS,IAAAA,eAAe,EAAEH;AAFX,GADe;AAKrBnB,EAAAA,SAAS,EAAE;AAAEuB,IAAAA,QAAQ,EAAEL;AAAZ;AALU,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACxD,KAAD,CAAnB;AAEA,MAAMyD,KAAK,GAAG5D,WAAW,CACzBmB,OADyB,EAEzBoC,YAFyB,EAGzBnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAJ,CAAhB,CAHM,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["    import { createStore, combineReducers, applyMiddleware } from 'redux'\n    import thunk from 'redux-thunk'\n    import { composeWithDevTools } from 'redux-devtools-extension'\n    // import {\n    // productListReducer,\n    // productDetailsReducer,\n    // productDeleteReducer,\n    // productCreateReducer,\n    // productUpdateReducer,\n    // productReviewCreateReducer,\n    // productTopRatedReducer,\n    // } from './reducers/productReducers'\n    import { cartReducer } from './reducers/cartReducers'\n    import {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n    } from './reducers/userReducers'\n    import {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderDeliverReducer,\n    orderListMyReducer,\n    orderListReducer,\n    } from './reducers/orderReducers'\n\n    const reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    })\n\n    const cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : []\n\n    const userInfoFromStorage = localStorage.getItem('userInfo')\n    ? JSON.parse(localStorage.getItem('userInfo'))\n    : null\n\n    const shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\n    : {}\n\n    const initialState = {\n    cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n    }\n\n    const middleware = [thunk]\n\n    const store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n    )\n\n    export default store"]},"metadata":{},"sourceType":"module"}